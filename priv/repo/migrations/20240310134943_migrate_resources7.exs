defmodule Pointex.Repo.Migrations.MigrateResources7 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop constraint("ash_shows", "ash_shows_pkey")

    alter table(:ash_watch_parties) do
      add :show_id, :uuid, null: false
    end

    alter table(:ash_shows) do
      modify :year, :bigint, primary_key: false
      modify :kind, :text, primary_key: false
      add :id, :uuid, null: false, primary_key: true
    end

    alter table(:ash_watch_parties) do
      modify :show_id,
             references(:ash_shows,
               column: :id,
               name: "ash_watch_parties_show_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    create unique_index(:ash_shows, [:year, :kind], name: "ash_shows_show_in_season_index")
  end

  def down do
    drop constraint("ash_shows", "ash_shows_pkey")

    drop_if_exists unique_index(:ash_shows, [:year, :kind],
                     name: "ash_shows_show_in_season_index"
                   )

    drop constraint(:ash_watch_parties, "ash_watch_parties_show_id_fkey")

    alter table(:ash_watch_parties) do
      modify :show_id, :uuid
    end

    alter table(:ash_shows) do
      remove :id
      modify :kind, :text, primary_key: true
      modify :year, :bigint, primary_key: true
    end

    alter table(:ash_watch_parties) do
      remove :show_id
    end
  end
end
