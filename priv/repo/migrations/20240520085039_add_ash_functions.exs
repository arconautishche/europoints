defmodule Pointex.Repo.Migrations.AddAshFunctions do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:ash_watch_parties) do
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:ash_shows) do
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:ash_participants) do
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end

    alter table(:ash_accounts) do
      modify :updated_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :inserted_at, :utc_datetime_usec, default: fragment("(now() AT TIME ZONE 'utc')")
      modify :id, :uuid, default: fragment("gen_random_uuid()")
    end
  end

  def down do
    alter table(:ash_accounts) do
      modify :id, :uuid, default: nil
      modify :inserted_at, :utc_datetime_usec, default: fragment("now()")
      modify :updated_at, :utc_datetime_usec, default: fragment("now()")
    end

    alter table(:ash_participants) do
      modify :id, :uuid, default: nil
    end

    alter table(:ash_shows) do
      modify :id, :uuid, default: nil
    end

    alter table(:ash_watch_parties) do
      modify :id, :uuid, default: nil
    end
  end
end
